// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PayTrackApplication.Infrastructure.Database;

#nullable disable

namespace PayTrackApplication.Infrastructure.Migrations
{
    [DbContext(typeof(PayTrackApplicationDbContext))]
    [Migration("20231018093725_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PayTrackApplication.Domain.Models.CompanyFolder.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Company");
                });

            modelBuilder.Entity("PayTrackApplication.Domain.Models.EmployeeFolder.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("PayTrackApplication.Domain.Models.EmployeeFolder.EmployeePolicyRenewalValidation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastRenewed")
                        .HasColumnType("datetime2");

                    b.Property<int>("NpiPolicyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EmployeePolicyRenewalValidation");
                });

            modelBuilder.Entity("PayTrackApplication.Domain.Models.NpiPolicyFolder.NpiPolicy", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("NpiPolicies");
                });

            modelBuilder.Entity("PayTrackApplication.Domain.Models.NpiPolicyFolder.NpiPolicyRule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("NpiPolicyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PolicyRuleType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NpiPolicyId");

                    b.ToTable("NpiPolicyRule");
                });

            modelBuilder.Entity("PayTrackApplication.Domain.Models.UsersFolder.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PayTrackApplication.Domain.Models.EmployeeFolder.Employee", b =>
                {
                    b.HasOne("PayTrackApplication.Domain.Models.CompanyFolder.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("PayTrackApplication.Domain.Models.NpiPolicyFolder.NpiPolicy", b =>
                {
                    b.HasOne("PayTrackApplication.Domain.Models.CompanyFolder.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PayTrackApplication.Domain.Models.EmployeeFolder.Employee", null)
                        .WithMany("Policies")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("PayTrackApplication.Domain.Models.NpiPolicyFolder.NpiPolicyRule", b =>
                {
                    b.HasOne("PayTrackApplication.Domain.Models.NpiPolicyFolder.NpiPolicy", null)
                        .WithMany("Rules")
                        .HasForeignKey("NpiPolicyId");
                });

            modelBuilder.Entity("PayTrackApplication.Domain.Models.EmployeeFolder.Employee", b =>
                {
                    b.Navigation("Policies");
                });

            modelBuilder.Entity("PayTrackApplication.Domain.Models.NpiPolicyFolder.NpiPolicy", b =>
                {
                    b.Navigation("Rules");
                });
#pragma warning restore 612, 618
        }
    }
}
